= form_for @beacon, as: :beacon, url: @beacon.new_record? ? beacons_path : beacon_path(@beacon), html: { id: 'beacon_form', multipart: true } do |f|
  .panel
    .panel-heading
      %h1.panel-title Beacon
    .panel-body
      - if @beacon.errors.any?
        #error_explanation
          %h4= "#{pluralize(@beacon.errors.count, "error")} prohibited this beacon from being saved:"
          %ul
            - @beacon.errors.full_messages.each do |msg|
              %li= msg
      .row
        .col-md-6
          .form-group
            = f.label :model
            = f.select :model, beacon_model_options, { include_blank: false }, { class: 'form-control' }
          .form-group
            = f.label :name
            = f.text_field :name, placeholder: 'Beacon name', class: 'form-control'
          .form-group
            = f.label :uuid
            = f.text_field :uuid, class: 'form-control'
        .col-md-6
          .form-group
            = f.label :major
            = f.text_field :major, class: 'form-control'
          .form-group
            = f.label :minor
            = f.text_field :minor, class: 'form-control'
            %p.help-block
              MAC address for Estimote iBeacons, id for Kontakt.io iBeacons. Leave blank if none of them.

  .panel
    .panel-heading
      %h1.panel-title Events
    .panel-body.beacon-events
      = render 'event_form', events: @beacon.events

  .row
    .col-md-12.text-right
      = link_to 'Cancel', :back, class: 'btn btn-link'
      = f.submit class: 'btn btn-primary'


:coffee
  $ ->
    $("input[type=checkbox]").bootstrapSwitch()
    $("input[type=checkbox]").on 'switchChange.bootstrapSwitch', (e, state) ->
      $(e.target).parents('.bootstrap-switch').siblings('[name="beacon[events_attributes][][active]"]').val state
    name_field = $('#beacon_name')
    model_field = $('#beacon_model')
    uuid_field = $('#beacon_uuid')

    $('#beacon_model, #beacon_uuid, #beacon_name').change ->
      name = name_field.val()
      if(name == '')
        model = model_field.val()
        uuid = uuid_field.val()

        generated_name = model + "-"

        if(uuid.indexOf('-') != -1)
          generated_name += uuid.split('-').pop()
        else if(uuid.length >= 4)
          generated_name += uuid.substr(uuid.length - 4)
        else
          generated_name += uuid

        name_field.attr('placeholder', generated_name)

    beacon_payload_tabs = $('.beacon-events .nav-tabs a')

    beacon_payload_tabs.click (e) ->
      e.preventDefault()
      $(this).tab('show')
      beacon_payload_type_field = $(this).parents('.nav-tabs').siblings('input[data-field=type]')
      beacon_payload_type_field.val $(this).data('beaconType')

    beacon_payload_tabs.on 'shown.bs.tab', (e) ->
      current_tab = $($(e.target).attr('href'))
      previous_tab = $($(e.relatedTarget).attr('href'))

      current_tab.find(':input').prop('disabled', false)
      previous_tab.find(':input').prop('disabled', true)

    $('.tab-content .tab-pane:not(.active) :input').prop('disabled', true)

    $('#beacon_form').submit (e) ->
      name_field.val(name_field.attr('placeholder')) if name_field.val() == ''